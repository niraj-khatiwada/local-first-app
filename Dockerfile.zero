ARG NODE_IMAGE=node:20-slim

FROM ${NODE_IMAGE} AS base

RUN apt-get update && apt-get install -y procps

RUN npm install -g pnpm@9.12.2

FROM base AS builder
WORKDIR /app
RUN chown -R node:node /app

COPY --chown=node:node zero/package*.json zero/pnpm-lock.yaml ./

# Install all dependencies (including devDependencies)
RUN pnpm fetch --frozen-lockfile
RUN pnpm install --frozen-lockfile

# Bundle app source
COPY --chown=node:node zero/ ./

RUN pnpm build

# Removes unnecessary packages and re-install only production dependencies
ENV NODE_ENV production
RUN pnpm prune --prod
RUN pnpm fetch --frozen-lockfile
RUN pnpm install --frozen-lockfile --prod

# Use the node user from the image (instead of the root user)
USER node

# Production stage
FROM ${NODE_IMAGE} AS production
WORKDIR /app

RUN chown -R node:node /app

COPY --chown=node:node --from=builder /app/node_modules ./node_modules
COPY --chown=node:node --from=builder /app/package.json ./
COPY --chown=node:node --from=builder /app/zero-schema.json ./
COPY --chown=node:node --from=builder /app/.env ./.env

# Use the node user from the image (instead of the root user)
USER node

CMD ["npm", "start"]
